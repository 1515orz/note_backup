    削减调试时间的方法之一是“二分调试”（debugging bybisection）。例如，如果你的程序有100行代码，如果每次检查一行，需要100步。
相反地，可以尝试把问题分成两半。找到程序的中点，或者接近那里的地方，找一个可以检验的中间结果。添加一个print语句（或者其他的可以有检查效果的
代码）并运行程序。如果中点检验的结果是错误的，说明错误必然出现在程序的前半部分。如果是正确的，那错误则在程序的后半部分。
    每进行一次这样的检查，就减少了一半需要检查的代码。经过6步之后（显然少于100步），就能够减少到一至两行代码，至少理论上如此。
    实践中，常常很难确定“程序的中点”在哪里，并且并不总是能够检验它。通过数代码行数来确定中点显然没有意义。相反地，应当思考程
序中哪些地方可能出错，哪些地方容易加上一个检查。然后选择一个你认为在其前后发生错误几率差不多的点进行检查。
